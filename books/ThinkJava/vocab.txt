Chapter 1
  1. problem solving: Process of formulating a problem, finding and expressing a solution.
  2. program: A sequence of instructions to a computer about how to perform a task.
  3. programming: Apply problem solving to create executable computer programs.
  4. computer science: The scientific and practical approach to computation and its applications.
  5. algorithm: A precise set of steps for solving a problem, with or without a computer.
  6. bug: An error in a program.
  7. debugging: The process of finding and removing errors.
  8. High-level language: A programming language designed for humans to easily read and write.
  9. Low-level language: A programming language designed to be easy for a computer to run.
        Alternativly called "machine" or "assembly" language.
  10. portable: A programs ability to run on multiple kinds of computers.
  11. interpret: Run a program in a high-level language by translating and immediately executing
        it one line at a time.
  12. compile: To fully translate a program in a high-level language into a low-level language to
        prepare for later execution.
  13. source code: A program in a high-level langauge, before being compiled.
  14. object code: The compiler's output, after translating the program.
  15. executable: Object code that is ready to run on specific hardware.
  16. byte code: A special kind of object code used for Java programs. Similar to a low level language,
        but portable like a high-level language.
  17. statement: Program piece that specifies one step of an algorithm.
  18. print statement: A statement that causes output to be displayed on the screen.
  19. method: A named sequence of statements.
  20. A collection of related methods.
  21. comment: Program peice that contains information about the program, but has no effect when program runs.
  22. string: A sequence of characters; the primary data type for text.
  23. newline: A special character signifying the end of a line of text.
  24. escape sequence: code sequence representing a special character when used inside a string.

  Chapter 2
    1. variable: a named storage location for values. All variables have a type, which is declared when it is created.
    2. value: data that can be stored in a variable. Every value belongs to a type.
    3. declaration: a statement that creates a new variable and specifies its type.
    4. type: A set of values (mathematics). A variable type determines its allowed values.
    5. keyword: A reserved word used by the compiler to analyze programs.
    6. assignment: A statement that gives a value to a variable.
    7. initialize: To assign a variable for the first time.
    8. state: the variables in a program and their current values.
    9. state diagram: a graphical representation of a programs state at a point in time.
    10. operator: a symbol that represents a computation.
    11. operand: one of the values on which an operator operates. Most operators require two operands.
    12. expression: A combination of variables, operators, and values that represents a single value.
    13. floating point: a data type that represents numbers with an integer and fractional part. Java's default floating type is double.
    14. rounding error: the difference between the number we want to represent and the nearest floating-point number.
    15. concatenate: to join two values, often strings, end-to-end.
    16. order of operations: the rules that determine in what order operations are evaluated.
    17. composition: the ability to combine simple expressions and statements into compound ones.
    18. syntax: A program's structure -- its arrangement of words and symbols.
    19. compile-time-error: an error in the source code that makes it impossible to compile (aka: syntax error);
    20. parse: to analyze the programs structure -- the compiler does this first.
    21. run-time-error: A program error that makes it impossible to run to completion (aka: exception).
    22. logic error: a program error that makes it do something other than what the programmer intended.
